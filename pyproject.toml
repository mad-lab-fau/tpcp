[tool.poetry]
name = "tpcp"
version = "0.2.0-alpha.0"
description = "Pipeline and Dataset helpers for complex algorithm evaluation."
authors = [
    "Arne Küderle <arne.kuederle@fau.de>",
    "Raul C. Sîmpetru <raul.simpetru@fau.de>",
    "Felix Kluge <felix.kluge@fau.de>"
]

[tool.poetry.dependencies]
python = ">=3.7.1,<3.11"
joblib = "^1.1.0"
scikit-learn = "^1.0.1"
numpy = "^1.21.3"
pandas = "^1.3.4"

[tool.poetry.dev-dependencies]
pytest = "^6.2.1"
pytest-cov = "^2.8.1"
prospector = "^1.2.0"
black = "^20.8b1"
isort = "^5.9.3"
numpydoc = "^1.1.0"
poethepoet = "^0.10.0"
sphinx-gallery = "^0.10.0"
pydata-sphinx-theme = "^0.7.1"
recommonmark = "^0.7.1"
memory-profiler = "^0.58.0"

[tool.black]
line-length = 120
target-version = ['py37']
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | docs
    | build
    | dist
    | \.virtual_documents
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
skip_gitignore = true

[tool.poe.tasks]
_format_black = "black ."
_format_isort = "isort ."
format = ["_format_black", "_format_isort"]
lint = { cmd = "prospector", help = "Lint all files with Prospector." }
_check_black = "black . --check"
_check_isort = "isort . --check"
check = { sequence = ["_check_black", "_check_isort", "lint"], help = "Check all potential format and linting issues.", ignore_fail = true }
test = { cmd = "pytest --cov=tpcp --cov-report=xml", help = "Run Pytest with coverage." }
docs = { "script" = "_tasks:task_docs()",  help = "Build the html docs using Sphinx." }
bump_version = { "script" = "_tasks:task_update_version()" }

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

